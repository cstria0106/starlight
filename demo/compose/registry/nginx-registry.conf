server {
        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot

        server_name registry.starlight.yuri.moe;

        root /var/www/html;
        index index.html;

        client_max_body_size 1G;
        gzip off;

        location / {
                if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                        return 404;
                }

                proxy_pass                          http://localhost:5000;
                proxy_set_header  Host              $http_host;   # required for docker client's sake
                proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
                proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_read_timeout                  9000;
                proxy_no_cache 1;
                proxy_cache_bypass 1;
                proxy_cache                     off;

        }

        # disable upload
        location ~ uploads {
                deny all;
        }

        ssl_certificate /etc/letsencrypt/live/registry.starlight.yuri.moe/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/registry.starlight.yuri.moe/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {
        # Only available within the VPC
        listen 172.31.79.145:80;

        server_name registry.starlight.yuri.moe;

        root /var/www/html;
        index index.html;

        client_max_body_size 1G;
        gzip off;

        location / {
                if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                        return 404;
                }

                proxy_pass                          http://localhost:5000;
                proxy_set_header  Host              $http_host;   # required for docker client's sake
                proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
                proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_read_timeout                  9000;
                proxy_no_cache 1;
                proxy_cache_bypass 1;
                proxy_cache                     off;
        }
}
