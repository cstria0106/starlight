apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "starlight-proxy-chart.fullname" . }}
  labels:
    {{- include "starlight-proxy-chart.labels" . | nindent 4 }}
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      {{- include "starlight-proxy-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "starlight-proxy-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "starlight-proxy-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: starlight-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.starlightProxy.repository }}:{{ .Values.starlightProxy.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.starlightProxy.pullPolicy }}
          ports:
            - name: http
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            periodSeconds: 60
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: REGISTRY
              value: {{ .Values.registryAddress | quote | default "http://localhost:5000" }}
            - name: LOGLEVEL
              value: {{ .Values.logLevel | quote | default "info" }}
          {{- if .Values.starlightProxy.persistence.enabled}}
          volumeMounts:
            - mountPath: /go/src/app/out/data/
              name: proxy-data
          {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.registry.enabled }}
        - name: starlight-container-registry
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.registry.repository }}:{{ .Values.registry.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.registry.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            periodSeconds: 60
            httpGet:
              path: /v2/
              port: http
          readinessProbe:
            httpGet:
              path: /v2/
              port: http
          env:
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: /data
          {{- if .Values.registry.persistence.enabled}}
          volumeMounts:
            - mountPath: /data/
              name: registry-data
          {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.registryUi.enabled }}
        - name: starlight-container-registry-ui
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.registryUi.repository }}:{{ .Values.registryUi.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.registryUi.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            periodSeconds: 60
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: SINGLE_REGISTRY
              value: "true"
            - name: REGISTRY_URL
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ index .Values.ingress.hosts 0}}
            - name: DELETE_IMAGES
              value: "true"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
      {{- if or .Values.starlightProxy.persistence.enabled .Values.registry.persistence.enabled}}
      volumes:
        {{- if .Values.starlightProxy.persistence.enabled}}
        - name: proxy-data
          persistentVolumeClaim:
            {{- if .Values.starlightProxy.persistence.existingClaim}}
            claimName: {{ .Values.starlightProxy.persistence.existingClaim }}
            {{- else}}
            claimName: {{ include "starlight-proxy-chart.name" . }}-proxy-pvc
            {{- end}}  
        {{- end}}
        {{- if .Values.registry.persistence.enabled}}
        - name: registry-data
          persistentVolumeClaim:
            {{- if .Values.registry.persistence.existingClaim}}
            claimName: {{ .Values.registry.persistence.existingClaim }}
            {{- else}}
            claimName: {{ include "starlight-proxy-chart.name" . }}-registry-pvc
            {{- end}}  
        {{- end}}
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
