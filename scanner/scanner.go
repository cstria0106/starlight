/*
   file created by Junlin Chen in 2022

*/

package scanner

// Metadata represents scanner metadata and capabilities.
type Metadata struct {
	Scanner      Scanner
	Capabilities []Capability
	// There might be some predefined properties that Harbor use, e.g. harbor.scanner-adapter/scanner-type
	// harbor.scanner-adapter/vulnerability-database-updated-at.
	Properties map[string]string
}

type Scanner struct {
	Name    string
	Vendor  string
	Version string
}

// Capability consists of the set of recognized artifact MIME types and the set of scanner report MIME types.
// For example, a scanner capable of analyzing Docker images and producing a vulnerabilities report recognizable
// by Harbor web console might be represented with the following capability:
// - consumed MIME types:
//   - `application/vnd.oci.image.manifest.v1+json`
//   - `application/vnd.docker.distribution.manifest.v2+json`
// - produced MIME types:
//   - `application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0`
type Capability struct {
	consumesMIMETypes []string
	producesMIMETypes []string
}

// Registry represents Registry connection settings.
type Registry struct {
	// A base URL of the Docker Registry v2 API exposed by Harbor.
	URL string
	// An optional value of the HTTP Authorization header sent with each request to the Docker Registry v2 API.
	// For example, `Bearer: JWTTOKENGOESHERE`.
	Authorization string
}

// Artifact represents an artifact stored in Registry.
type Artifact struct {
	// The name of a Harbor repository containing the artifact.
	// For example, `library/oracle/nosql`.
	Repository string
	// The artifact's digest, consisting of an algorithm and hex portion.
	// For example, `sha256:6c3c624b58dbbcd3c0dd82b4c53f04194d1247c6eebdaab7c610cf7d66709b3b`,
	// represents sha256 based digest.
	Digest string
	// The MIME type of this artifact to distinguish Docker images from Helm 3 Charts or CNABs.
	MimeType string
}

// ScanRequest represents a structure that is sent to a Scanner Adapter to initiate artifact scanning.
// Conducts all the details required to pull the artifact from a Harbor registry.
type ScanRequest struct {
	// Connection settings for the Docker Registry v2 API exposed by Harbor.
	Registry Registry
	// Artifact to be scanned.
	Artifact Artifact
}

type ScanResponse struct {
	// The unique identifier generated by Scanner Adapter.
	// Used to poll and fetch the corresponding Scan Reports.
	ID string
}
